#    Date: 09 09 2019
#
# Twin Univariate ACE model to estimate causes of variation across multiple groups
# Matrix style model - Raw data - Binary data
# -------|---------|---------|---------|---------|---------|---------|---------|---------|---------|---------|---------|
# Load Libraries & Options
rm(list=ls())
library(OpenMx)
library(psych); library(polycor)
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/Skriptbibliothek/miFunctions.R")
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/twinflex/Git/twinflex.R")
# Create Output
filename    <- "oneACEb"
sink(paste(filename,".Ro",sep=""), append=FALSE, split=TRUE)
sink()
# ----------------------------------------------------------------------------------------------------------------------
# PREPARE DATA
# Load Data
data(twinData)
dim(twinData)
describe(twinData[,1:12], skew=F)
# Create Binary Variables
binData   <- data.frame(bbmi1= rep(ifelse(twinData[,'bmi1']>22,1.00,0.00)),
bbmi2= rep(ifelse(twinData[,'bmi2']>22,1.00,0.00)), zyg=twinData[,'zyg'])
# Select Variables for Analysis
vars      <- 'bbmi'                    # list of variables names
nv        <- 1                         # number of variables
ntv       <- nv*2                      # number of total variables
selVars   <- paste(vars,c(rep(1,nv),rep(2,nv)),sep="")
# Select Data for Analysis
mzData    <- subset(binData, zyg==1, selVars)
dzData    <- subset(binData, zyg==3, selVars)
mzDataF   <- mxFactor( x=mzData, levels=c(0:1) )
dzDataF   <- mxFactor( x=dzData, levels=c(0:1) )
# Generate Descriptive Statistics
sapply(mzData,table)
sapply(dzData,table)
hetcor(mzData)$cor
hetcor(dzData)$cor
# Set Starting Values
svTh      <- .8                        # start value for thresholds
svPa      <- .5                        # start value for path coefficient
svPe      <- .7                        # start value for path coefficient for e
lbPa      <- .0001                     # lower bound for path coefficient
# ----------------------------------------------------------------------------------------------------------------------
# PREPARE MODEL
# Create Algebra for expected Mean & Threshold Matrices
meanG     <- mxMatrix( type="Zero", nrow=1, ncol=ntv, name="meanG" )
threG     <- mxMatrix( type="Full", nrow=1, ncol=ntv, free=TRUE, values=svTh, labels=labVars("thre",vars), name="threG" )
# Create Matrices for Path Coefficients
pathA     <- mxMatrix( type="Lower", nrow=nv, ncol=nv, free=TRUE, values=svPa, label="a11", lbound=lbPa, name="a" )
pathC     <- mxMatrix( type="Lower", nrow=nv, ncol=nv, free=TRUE, values=svPa, label="c11", lbound=lbPa, name="c" )
pathE     <- mxMatrix( type="Lower", nrow=nv, ncol=nv, free=TRUE, values=svPe, label="e11", lbound=lbPa, name="e" )
# Create Algebra for Variance Components
covA      <- mxAlgebra( expression=a %*% t(a), name="A" )
covC      <- mxAlgebra( expression=c %*% t(c), name="C" )
covE      <- mxAlgebra( expression=e %*% t(e), name="E" )
# Create Algebra for expected Variance/Covariance Matrices in MZ & DZ twins
covP      <- mxAlgebra( expression= A+C+E, name="V" )
covMZ     <- mxAlgebra( expression= A+C, name="cMZ" )
covDZ     <- mxAlgebra( expression= 0.5%x%A+ C, name="cDZ" )
expCovMZ  <- mxAlgebra( expression= rbind( cbind(V, cMZ), cbind(t(cMZ), V)), name="expCovMZ" )
expCovDZ  <- mxAlgebra( expression= rbind( cbind(V, cDZ), cbind(t(cDZ), V)), name="expCovDZ" )
# Constrain Variance of Binary Variables
var1     <- mxConstraint( expression=diag2vec(V)==1, name="Var1" )
# Create Data Objects for Multiple Groups
dataMZ    <- mxData( observed=mzDataF, type="raw" )
dataDZ    <- mxData( observed=dzDataF, type="raw" )
# Create Expectation Objects for Multiple Groups
expMZ     <- mxExpectationNormal( covariance="expCovMZ", means="meanG", dimnames=selVars, thresholds="threG" )
expDZ     <- mxExpectationNormal( covariance="expCovDZ", means="meanG", dimnames=selVars, thresholds="threG" )
funML     <- mxFitFunctionML()
# Create Model Objects for Multiple Groups
pars      <- list( meanG, threG, pathA, pathC, pathE, covA, covC, covE, covP )
modelMZ   <- mxModel( pars, covMZ, expCovMZ, dataMZ, expMZ, funML, name="MZ" )
modelDZ   <- mxModel( pars, covDZ, expCovDZ, dataDZ, expDZ, funML, name="DZ" )
multi     <- mxFitFunctionMultigroup( c("MZ","DZ") )
# Create Algebra for Unstandardized and Standardized Variance Components
rowUS     <- rep('US',nv)
colUS     <- rep(c('A','C','E','SA','SC','SE'),each=nv)
estUS     <- mxAlgebra( expression=cbind(A,C,E,A/V,C/V,E/V), name="US", dimnames=list(rowUS,colUS) )
# Create Confidence Interval Objects
ciACE     <- mxCI( "US[1,1:3]" )
# Build Model with Confidence Intervals
modelACE  <- mxModel( "oneACEb", pars, var1, modelMZ, modelDZ, multi, estUS, ciACE )
# ----------------------------------------------------------------------------------------------------------------------
# RUN MODEL
# Run ACE Model
fitACE    <- mxRun( modelACE, intervals=T )
ace_uni_b <- twinflex(acevars = "bbmi", data = binData,ordinal = "bbmi",sep = "",zyg = "zyg") ## works fine
sumACE    <- summary( fitACE )
sumACE
ace_uni_b[["ModelSummary"]]
# Build Model with Confidence Intervals
modelACE  <- mxModel( "oneACEb", pars, var1, modelMZ, modelDZ, multi )
# Run ACE Model
fitACE    <- mxRun( modelACE, intervals=T )
sumACE    <- summary( fitACE )
sumACE
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
# create binary variable
data_orig <- data_orig %>% mutate(schoolb_1 = ifelse(schoolhigh_1 <= 2, 1,
ifelse(schoolhigh_1 >= 3, 2, NA))) %>%
mutate(schoolb_2 = ifelse(schoolhigh_2 <= 2, 1,
ifelse(schoolhigh_2 >= 3, 2, NA)))
mz_data <- data_orig %>% filter(zyg ==1)
dz_data <- data_orig %>% filter(zyg ==2)
# load function
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/twinflex/Git/twinflex.R")
library(umx)
# umx
umx_uni_c <- umxACE(selDVs = "posbez", dzData = dz_data, mzData = mz_data, sep = "_")
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
library(umx)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
# create binary variable
data_orig <- data_orig %>% mutate(schoolb_1 = ifelse(schoolhigh_1 <= 2, 1,
ifelse(schoolhigh_1 >= 3, 2, NA))) %>%
mutate(schoolb_2 = ifelse(schoolhigh_2 <= 2, 1,
ifelse(schoolhigh_2 >= 3, 2, NA)))
mz_data <- data_orig %>% filter(zyg ==1)
dz_data <- data_orig %>% filter(zyg ==2)
# load function
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/twinflex/Git/twinflex.R")
# univariate ACE model with continuous DV
# twinflex
tf_uni_c <- twinflex(acevars = "posbez",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_c <- umxACE(selDVs = "posbez", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_c[
)
# comparison
tf_uni_c[["ModelSummary"]]
summary(umx_uni_c)
# comparison
tf_uni_c[["ModelSummary"]] # -2LL = 8642.8438, AIC =
summary(umx_uni_c)         # -2LL = 8642.8438
tf_uni_o <- twinflex(acevars = "schoolhigh",ordinal = "schoolhigh",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_o <- umxACE(selDVs = "schoolhigh", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_o[["ModelSummary"]] # -2LL = 8642.8438
summary(umx_uni_o)         # -2LL = 8642.8438
# comparison
tf_uni_o[["ModelSummary"]] # -2LL = 5853.9736
summary(umx_uni_o)         # -2LL = 7426.3394
ovars <- c("schoolhigh_1","schoolhigh_2","schoolb_1","schoolb_2")
mz_data[,ovars] <- umxFactor(mz_data[,ovars])
dz_data[,ovars] <- umxFactor(dz_data[,ovars])
# univariate ACE model with ordinal DV
# twinflex
tf_uni_o <- twinflex(acevars = "schoolhigh",ordinal = "schoolhigh",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_o <- umxACE(selDVs = "schoolhigh", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_o[["ModelSummary"]] # -2LL = 5853.9736
summary(umx_uni_o)         # -2LL = 7426.3394
# univariate ACE model with binary DV
# twinflex
tf_uni_b <- twinflex(acevars = "schoolb",ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_b <- umxACE(selDVs = "schoolb", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_b[["ModelSummary"]] # -2LL = 5853.9736
summary(umx_uni_b)         # -2LL = 5853.9736
# comparison
tf_uni_b[["ModelSummary"]] # -2LL = 5853.9736
summary(umx_uni_b)         # -2LL = 5853.9736
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
library(umx)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
# create binary variable
data_orig <- data_orig %>% mutate(schoolb_1 = ifelse(schoolhigh_1 <= 2, 1,
ifelse(schoolhigh_1 >= 3, 2, NA))) %>%
mutate(schoolb_2 = ifelse(schoolhigh_2 <= 2, 1,
ifelse(schoolhigh_2 >= 3, 2, NA)))
mz_data <- data_orig %>% filter(zyg ==1)
dz_data <- data_orig %>% filter(zyg ==2)
ovars <- c("schoolhigh_1","schoolhigh_2","schoolb_1","schoolb_2")
mz_data[,ovars] <- umxFactor(mz_data[,ovars])
dz_data[,ovars] <- umxFactor(dz_data[,ovars])
# load function
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/twinflex/Git/twinflex.R")
# univariate ACE model with continuous DV and covariate in covariance matrix
# twinflex
tf_uni_c_cc <- twinflex(acevars = "posbez",covvars = "iseiempmean",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_c_cc <- umxACEcov(selDVs = "posbez", selCovs = "iseiempmean", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
ace_uni_c_cc[["ModelSummary"]]
# comparison
tf_uni_c_cc[["ModelSummary"]]
summary(umx_uni_c_cc)
summary(data_orig)
# bivariate ACE model ("Cholesky") with only continuous variables
tf_uni_c <- twinflex(acevars = c("posbez","negbez"),data = data_orig,sep = "_",zyg = "zyg") ## works fine
# bivariate ACE model ("Cholesky") with only continuous variables
tf_bi_c <- twinflex(acevars = c("posbez","negbez"),data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_bi_c <- umxACE(selDVs = c("posbez","negbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_c[["ModelSummary"]] # -2LL = 3153.1204
summary(umx_bi_c)         # -2LL = 3153.1204
# bivariate ACE model ("Cholesky") with continuous and ordinal variables
# twinflex
tf_bi_co <- twinflex(acevars = c("schoolhigh","posbez"),ordinal = "schoolhigh",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_bi_co <- umxACE(selDVs = c("schoolhigh","posbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_co[["ModelSummary"]] # -2LL = 17006.44
summary(umx_bi_co)         # -2LL = 17006.44
# bivariate ACE model ("Cholesky") with continuous and binary variables
# twinflex
tf_bi_cb <- twinflex(acevars = c("schoolb","posbez"),ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_bi_cb <- umxACE(selDVs = c("schoolb","posbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 14459.13
summary(umx_bi_cb)         # -2LL = 14459.13
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 14459.13
summary(umx_bi_cb)         # -2LL = 14459.13
# bivariate ACE model ("Cholesky") with continuous and binary variables
# twinflex
tf_bi_cb <- twinflex(acevars = c("schoolb","posbez"),ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg",tryHard = TRUE) ## works fine
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 11788.78
summary(umx_bi_cb)         # -2LL = 11767.31
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 11788.78
summary(umx_bi_cb)         # -2LL = 11767.31
# univariate ACE model with binary DV
# twinflex
tf_uni_b <- twinflex(acevars = "schoolb",ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_b <- umxACE(selDVs = "schoolb", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_b[["ModelSummary"]] # -2LL = 3153.1204
summary(umx_uni_b)         # -2LL = 3153.1204
# bivariate ACE model ("Cholesky") with continuous and ordinal variables
# twinflex
tf_bi_co <- twinflex(acevars = c("schoolhigh","posbez"),ordinal = "schoolhigh",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# bivariate ACE model ("Cholesky") with continuous and binary variables
# twinflex
tf_bi_cb <- twinflex(acevars = c("schoolb","posbez"),ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg",tryHard = TRUE) ## works fine
# umx
umx_bi_cb <- umxACE(selDVs = c("schoolb","posbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# bivariate ACE model ("Cholesky") with continuous and binary variables
# twinflex
tf_bi_cb <- twinflex(acevars = c("schoolb","posbez"),ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg",optimizer = "SLSQP") ## works fine
# umx
umx_bi_cb <- umxACE(selDVs = c("schoolb","posbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 11788.78
summary(umx_bi_cb)         # -2LL = 11767.31
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 11788.78
summary(umx_bi_cb)         # -2LL = 11767.31
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 11788.78
summary(umx_bi_cb)         # -2LL = 11767.31
# umx
umx_bi_cb <- umxACE(selDVs = c("schoolb","posbez"), dzData = dz_data, mzData = mz_data, sep = "_")
summary(umx_bi_cb)         # -2LL = 11767.31
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
library(umx)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
library(umx)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
# create binary variable
data_orig <- data_orig %>% mutate(schoolb_1 = ifelse(schoolhigh_1 <= 2, 1,
ifelse(schoolhigh_1 >= 3, 2, NA))) %>%
mutate(schoolb_2 = ifelse(schoolhigh_2 <= 2, 1,
ifelse(schoolhigh_2 >= 3, 2, NA)))
mz_data <- data_orig %>% filter(zyg ==1)
dz_data <- data_orig %>% filter(zyg ==2)
ovars <- c("schoolhigh_1","schoolhigh_2","schoolb_1","schoolb_2")
mz_data[,ovars] <- umxFactor(mz_data[,ovars])
dz_data[,ovars] <- umxFactor(dz_data[,ovars])
# load function
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/twinflex/Git/twinflex.R")
# univariate ACE model with continuous DV
# twinflex
tf_uni_c <- twinflex(acevars = "posbez",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_c <- umxACE(selDVs = "posbez", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_c[["ModelSummary"]] # -2LL = 8642.8438
summary(umx_uni_c)         # -2LL = 8642.8438
# univariate ACE model with ordinal DV
# twinflex
tf_uni_o <- twinflex(acevars = "schoolhigh",ordinal = "schoolhigh",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_o <- umxACE(selDVs = "schoolhigh", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_o[["ModelSummary"]] # -2LL = 5853.9736
summary(umx_uni_o)         # -2LL = 5853.9736
# univariate ACE model with binary DV
# twinflex
tf_uni_b <- twinflex(acevars = "schoolb",ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_uni_b <- umxACE(selDVs = "schoolb", dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_uni_b[["ModelSummary"]] # -2LL = 3153.1204
summary(umx_uni_b)         # -2LL = 3153.1204
# bivariate ACE model ("Cholesky") with only continuous variables
# twinflex
tf_bi_cc <- twinflex(acevars = c("posbez","negbez"),data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_bi_cc <- umxACE(selDVs = c("posbez","negbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_cc[["ModelSummary"]] # -2LL = 17006.44
summary(umx_bi_cc)         # -2LL = 17006.44
# bivariate ACE model ("Cholesky") with continuous and ordinal variables
# twinflex
tf_bi_co <- twinflex(acevars = c("schoolhigh","posbez"),ordinal = "schoolhigh",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_bi_co <- umxACE(selDVs = c("schoolhigh","posbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_co[["ModelSummary"]] # -2LL = 14459.13
summary(umx_bi_co)         # -2LL = 14459.13
# bivariate ACE model ("Cholesky") with continuous and binary variables
# twinflex
tf_bi_cb <- twinflex(acevars = c("schoolb","posbez"),ordinal = "schoolb",data = data_orig,sep = "_",zyg = "zyg",optimizer = "SLSQP") ## works fine
# umx
umx_bi_cb <- umxACE(selDVs = c("schoolb","posbez"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 11788.78
summary(umx_bi_cb)         # -2LL = 11767.31
summary(data_orig)
?median
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
library(umx)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
# create binary variable
data_orig <- data_orig %>% mutate(schoolb_1 = ifelse(schoolhigh_1 <= 2, 1,
ifelse(schoolhigh_1 >= 3, 2, NA))) %>%
mutate(schoolb_2 = ifelse(schoolhigh_2 <= 2, 1,
ifelse(schoolhigh_2 >= 3, 2, NA))) %>%
mutate(kukabin_1 = ifelse(kultkapjahre_1 >= median(kultkapjahre_1, na.rm = TRUE),1,
ifelse(kultkapjahre_1 < median(kultkapjahre_1, na.rm = TRUE),2,NA))) %>%
mutate(kukabin_2 = ifelse(kultkapjahre_2 >= median(kultkapjahre_1, na.rm = TRUE),1,
ifelse(kultkapjahre_2 < median(kultkapjahre_1, na.rm = TRUE),2,NA)))
# bivariate ACE model ("Cholesky") with two binary variables
# twinflex
tf_bi_bb <- twinflex(acevars = c("schoolb","kukabin"),ordinal = "kukabin",data = data_orig,sep = "_",zyg = "zyg",optimizer = "SLSQP") ## works fine
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
library(umx)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
# create binary variable
data_orig <- data_orig %>% mutate(schoolb_1 = ifelse(schoolhigh_1 <= 2, 1,
ifelse(schoolhigh_1 >= 3, 2, NA))) %>%
mutate(schoolb_2 = ifelse(schoolhigh_2 <= 2, 1,
ifelse(schoolhigh_2 >= 3, 2, NA))) %>%
mutate(kukabin_1 = ifelse(kultkapjahre_1 >= median(kultkapjahre_1, na.rm = TRUE),1,
ifelse(kultkapjahre_1 < median(kultkapjahre_1, na.rm = TRUE),2,NA))) %>%
mutate(kukabin_2 = ifelse(kultkapjahre_2 >= median(kultkapjahre_1, na.rm = TRUE),1,
ifelse(kultkapjahre_2 < median(kultkapjahre_1, na.rm = TRUE),2,NA)))
mz_data <- data_orig %>% filter(zyg ==1)
dz_data <- data_orig %>% filter(zyg ==2)
ovars <- c("schoolhigh_1","schoolhigh_2","schoolb_1","schoolb_2")
mz_data[,ovars] <- umxFactor(mz_data[,ovars])
dz_data[,ovars] <- umxFactor(dz_data[,ovars])
# load function
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/twinflex/Git/twinflex.R")
# bivariate ACE model ("Cholesky") with two binary variables
# twinflex
tf_bi_bb <- twinflex(acevars = c("schoolb","kukabin"),ordinal = "kukabin",data = data_orig,sep = "_",zyg = "zyg",optimizer = "SLSQP") ## works fine
# umx
umx_bi_bb <- umxACE(selDVs = c("schoolb","kukabin"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_cb[["ModelSummary"]] # -2LL = 11767.31
# bivariate ACE model ("Cholesky") with two binary variables
# twinflex
tf_bi_bb <- twinflex(acevars = c("schoolb","kukabin"),ordinal = "kukabin",data = data_orig,sep = "_",zyg = "zyg") ## works fine
tf_bi_bb
# umx
umx_bi_bb <- umxACE(selDVs = c("schoolb","kukabin"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_bb[["ModelSummary"]] # -2LL = 11767.31
summary(umx_bi_bb)         # -2LL = 11767.31
rm(list = ls())
library(dplyr)
library(OpenMx)
library(xtable)
library(umx)
data_orig <- read.csv(file = "C:/Users/Besitzer/Documents/Arbeit/Twinlife/Artikel/Netzwerke/Git/netzwerke/Update/data_wide.csv",
header = TRUE)
summary(data_orig)
# create binary variable
data_orig <- data_orig %>% mutate(schoolb_1 = ifelse(schoolhigh_1 <= 2, 1,
ifelse(schoolhigh_1 >= 3, 2, NA))) %>%
mutate(schoolb_2 = ifelse(schoolhigh_2 <= 2, 1,
ifelse(schoolhigh_2 >= 3, 2, NA))) %>%
mutate(kukabin_1 = ifelse(kultkapjahre_1 >= median(kultkapjahre_1, na.rm = TRUE),1,
ifelse(kultkapjahre_1 < median(kultkapjahre_1, na.rm = TRUE),2,NA))) %>%
mutate(kukabin_2 = ifelse(kultkapjahre_2 >= median(kultkapjahre_1, na.rm = TRUE),1,
ifelse(kultkapjahre_2 < median(kultkapjahre_1, na.rm = TRUE),2,NA)))
mz_data <- data_orig %>% filter(zyg ==1)
dz_data <- data_orig %>% filter(zyg ==2)
ovars <- c("schoolhigh_1","schoolhigh_2","schoolb_1","schoolb_2","kukabin_1","kukabin_2")
mz_data[,ovars] <- umxFactor(mz_data[,ovars])
dz_data[,ovars] <- umxFactor(dz_data[,ovars])
# load twinflex function
source("C:/Users/Besitzer/Documents/Arbeit/Twinlife/twinflex/Git/twinflex.R")
# bivariate ACE model ("Cholesky") with two binary variables
# twinflex
tf_bi_bb <- twinflex(acevars = c("schoolb","kukabin"),ordinal = "kukabin",data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_bi_bb <- umxACE(selDVs = c("schoolb","kukabin"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_bb[["ModelSummary"]] # -2LL = 6520.656
summary(umx_bi_bb)         # -2LL = 6652.378
# bivariate ACE model ("Cholesky") with two binary variables
# twinflex
tf_bi_bb <- twinflex(acevars = c("schoolb","kukabin"),ordinal = c("schoolb","kukabin"),data = data_orig,sep = "_",zyg = "zyg") ## works fine
# umx
umx_bi_bb <- umxACE(selDVs = c("schoolb","kukabin"), dzData = dz_data, mzData = mz_data, sep = "_")
# comparison
tf_bi_bb[["ModelSummary"]] # -2LL = 6520.656
# comparison
tf_bi_bb[["ModelSummary"]] # -2LL = 6529.205
summary(umx_bi_bb)         # -2LL = 6529.205
summary(data_orig)
# umx
umx_modu_c <- umxGxE(selDVs = c("posbez"), selDefs = "age",dzData = dz_data, mzData = mz_data, sep = "_")
# univariate GxE with constant moderator and continuous DV
# twinflex
tf_modu_c <- twinflex(acevars = c("posbez"),data = data_orig,sep = "_",zyg = "zyg", modACEuniv = "posbez BY age") ## works fine
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 6529.205
# univariate GxE with constant moderator and continuous DV
# twinflex
tf_modu_c <- twinflex(acevars = c("posbez"),data = data_orig,sep = "_",zyg = "zyg", modACEuniv = "posbez BY age", tryHard = TRUE) ## works fine
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 6529.205
# umx
mzgxe1 <- mz_data %>% filter(!is.na(age)) %>% mutate(age_1 = age) %>% mutate(age_2 = age) %>% select(posbez_1,posbez_2,age_1,age_2)
dzgxe1 <- dz_data %>% filter(!is.na(age)) %>% mutate(age_1 = age) %>% mutate(age_2 = age) %>% select(posbez_1,posbez_2,age_1,age_2)
# univariate GxE with constant moderator and continuous DV
# twinflex
gxe1 <- data_orig %>% filter(!is.na(age))
tf_modu_c <- twinflex(acevars = c("posbez"),data = gxe1,sep = "_",zyg = "zyg", modACEuniv = "posbez BY age", tryHard = TRUE) ## works fine
tf_modu_c <- twinflex(acevars = c("posbez"),data = gxe1,sep = "_",zyg = "zyg", modACEuniv = "posbez BY age") ## works fine
# umx
mzgxe1 <- mz_data %>% filter(!is.na(age)) %>% mutate(age_1 = age) %>% mutate(age_2 = age) %>% select(posbez_1,posbez_2,age_1,age_2)
dzgxe1 <- dz_data %>% filter(!is.na(age)) %>% mutate(age_1 = age) %>% mutate(age_2 = age) %>% select(posbez_1,posbez_2,age_1,age_2)
umx_modu_c <- umxGxE(selDVs = c("posbez"), selDefs = "age",dzData = dzgxe1, mzData = mzgxe1, sep = "_")
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 6529.205
summary(umx_bi_bb)         # -2LL = 6529.205
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 6529.205
summary(umx_modu_c)         # -2LL = 6529.205
tf_modu_c <- twinflex(acevars = c("posbez"),data = gxe1,sep = "_",zyg = "zyg", modACEuniv = "posbez BY age", tryHard = TRUE) ## works fine
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 6529.205
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 8575.396
summary(umx_modu_c)         # -2LL = 8571.916
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 8575.396
summary(umx_modu_c)         # -2LL = 8571.916
umx_modu_c <- umxModify(umx_modu_c, update = "quad11")
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 8575.396
summary(umx_modu_c)         # -2LL = 8571.916
tf_modu_c <- twinflex(acevars = c("posbez"),data = gxe1,sep = "_",zyg = "zyg", modACEuniv = "posbez BY age") ## works fine
# comparison
tf_modu_c[["ModelSummary"]] # -2LL = 8575.396
summary(umx_modu_c)         # -2LL = 8575.396
umx_modu_c <- umxGxE(selDVs = c("posbez"), selDefs = "age",dzData = dzgxe1, mzData = mzgxe1, sep = "_", lboundACE = 1e-04)
umx_modu_c <- umxModify(umx_modu_c, update = "quad11")
summary(umx_modu_c)         # -2LL = 8575.396
